CREATE TABLE emp_test (
      id  NUMBER(3),
      name VARCHAR2(15),
      salary NUMBER(7,2),
      title VARCHAR2(15)    DEFAULT '사원',
      in_date DATE          DEFAULT SYSDATE,
      dept_name  VARCHAR2(15)
);

-- //========================================//

DESC emp_test;
DESCRIBE emp_test;
SELECT * FROM emp_test;

-- //=========================================//

CREATE TABLE test_table ();

-- //============================================//

CREATE TABLE test_table (
    no  NUMBER(10),
    contents VARCHAR2(10)
);

DESC test_table;

SELECT * FROM test_table;

DROP TABLE  test_table;

DESC test_table;

-- //========================================//

SELECT SYSDATE FROM DUAL;

-- //========================================//

SELECT 9 * 9 FROM DUAL;
SELECT USER FROM DUAL;

-- //=========================================//

INSERT
INTO emp_test (id, name, salary, title, in_date, dept_name)
VALUES (1, '김사장', 100, '사장', '04-07-19', '개발부');

SELECT * FROM EMP_TEST;

set linesize 1000; --출력 길이 조정, 안되면 콘솔 가로 길이 조정

-- //==========================================//

INSERT
INTO emp_test (id, name, salary)
VALUES (3, '홍길순', 10000);

-- //==========================================//

INSERT
INTO emp_test (id, name, title)
VALUES (4, '이순신', '장군');

-- //>>=============================================//

INSERT
INTO emp_test (id, name, title)
VALUES (4, '이순신', '장군');

SELECT * FROM emp_test;

ROLLBACK;

SELECT * FROM emp_test;

-- //===================================//

INSERT
INTO emp_test
VALUES (2, USER, 1000, '부사장', SYSDATE, '영업부');

-- //==========================================//

INSERT
INTO emp_test (id, name)
VALUES (5, '장나라');

--//==========================================//

INSERT
INTO emp_test
VALUES(6, '신나라', NULL, null, '','');

COMMIT;

--//==========================================//
SELECT * FROM emp_test;

UPDATE  emp_test
SET id = 7
WHERE name = 'SCOTT';

SELECT * FROM emp_test;

ROLLBACK;

SELECT * FROM emp_test;


--//==========================================//

UPDATE emp_test
SEt id = 7
WHERE name = 'SCOTT';

SELECT * FROM emp_test;

COMMIT;

UPDATE emp_test
SET dept_name = '관리부'
WHERE dept_name = '영업부';

SELECT * FROM emp_test;

COMMIT;

--//==========================================//
DELETE FROM emp_test
WHERE title = '장군';

SELECT * FROM emp_test;

COMMIT;

--//==========================================//

DELETE FROM emp_test
WHERE id >= 6;

SELECT * FROM emp_test;

ROLLBACK;

SELECT * FROM emp_test;

--//==========================================//

DELETE FROM emp_test
WHERE id >= 5 AND id <= 6;

SELECT * FROM emp_test;

ROLLBACK;

SELECT * FROM emp_test;

--//==========================================//

DELETE FROM emp_test
WHERE id = 5 OR id = 6;

SELECT * FROM emp_test;

COMMIT;

SELECT * FROM emp_test;

--//==========================================//

DELETE FROM emp_test
WHERE id = 2 OR id = 3;

SELECT * FROM emp_test;

ROLLBACK;

SELECT * FROM emp_test;

--//==========================================//

DELETE FROM emp_test;

SELECT * FROM emp_test;

ROLLBACK;

SELECT * FROM emp_test;

--//==========================================//

SELECT * FROM emp_test;

SELECT id, name
FROM emp_test;

SELECT name, id
FROm emp_test;

--//==========================================//

SELECT name, salary, salary * 12
FROM emp_test;

--//==========================================//

SELECT name AS 이름, salary AS 월급, salary * 12 AS 연봉
FROM emp_test;

--//==========================================//

SELECT name 이름, salary 월급, salary * 12 연봉
FROm emp_test;

--//==========================================//

SELECT name 이름, salary 월급, salary * 12 연봉 (성과급 제외)
FROM emp_test;

--//==========================================//
SELECT * FROM emp_test;

SELECT name, NVL(salary, '무급')
FROM emp_test;

--//==========================================//

SELECT name, NVL2(salary, salary, 0), NVL(salary, 0)
FROM emp_test;

SELECT name, NVL2(salary, salary * 12, 0), NVL(salary * 12, 0)
FROM emp_test;

SELECT name, NVL2(title, title, '<직급없음>'), NVL(title, '<직급없음>'), NVL2(title, '직급있음', '<직급없음>')
FROM emp_test;

--//==========================================//

SELECT name, DECODE(title, NULL, '<직급없음>', '직급있음')
FROM emp_test;

SELECT
name, DECODE(title, NULL, '직급없음', '사장', '회사의 아버지', '부사장', '회사의어머니', '직급있음'), title
FROM emp_test;

--//=======================================//

SELECT
name 이름, salary * 12 연봉
FROM emp_test
ORDER BY salary * 12 ASC NULLS FIRST;

SELECT
name 이름, salary * 12 연봉
FROM emp_test
ORDER BY salary * 12 DESC NULLS LAST

--//===============================================//

SELECT
name 이름, salary * 12 연봉
FROM emp_test
ORDER BY salary * 12;

SELECT
name 이름. salary * 12 연봉
FROM emp_test
ORDER BY salary;

SELECT
name 이름. salary * 12 연봉
FROM emp_test
ORDER BY 연봉;

SELECT
name 이름. salary * 12 연봉
FROM emp_test
ORDER BY 2;

--//============================================//

SELECT
name 이름, salary * 12 연봉, dept_name 부서
FROM emp_test
ORDER BY dept_name;

SELECT
name 이름, salary * 12 연봉
FROM emp_test
ORDER BY dept_name;

--//================================================//

SELECT
name 이름, salary * 12 연봉, dept_name 부서
FROM emp_test
ORDER BY salary;

SELECT
name 이름, salary * 12 연봉, dept_name 부서
FROM emp_test
ORDER BY salary, 부서;

SELECT
name 이름, salary * 12 연봉, dept_name 부서
FROM emp_test
ORDER BY 부서, salary;

--//=================================================//

SELECT
name || title
FROM emp_test;

SELECT
name||' '||title
FROM emp_test;

--//=================================================//

SELECT dept_name 부서 FROM emp_test;

SELECT
DISTINCT dept_name, name
FROM emp_test;

--//=================================================//

INSERT
INTO emp_test (name, dept_name)
VALUES('홍길동', '관리부');

SELECT
dept_name, name
FROM emp_test;

SELECT
DISTINCT dept_name, name
FROM emp_test;

ROLLBACK;

--//=================================================//

SELECT
name 이름, SALARY * 12 얀봉
FROM emp_test
ORDER BY salary * 12 ASC;

SELECT
name 이름, salary * 12 연봉
FROM emp_test
ORDER BY salary * 12 DESC;

SELECT
name 이름, salary * 12 연봉
FROM emp_test
ORDER BY salary * 12;

--//===================================================//

SELECT
name 이름, salary 월급, in_date 입사일
FROM emp_test
WHERE salary >= 5000
ORDER BY salary;

SELECT
name 이름, salary 월급, in_date 입사일
FROM emp_test
WHERE in_date;

SELECT
name 이름, salary 월급, in_date 입사일
FROM emp_test
WHERE name >= '이순신666'
ORDER BY name

--이해를 돕기 위해 아래 확인

SELECT name FROM emp_test ORDER BY name;

--//=========================================================//

SELECT
name 이름, salary 월급, in_date 입사일
FROM emp_test
WHERE in_date > '2004-01-01' OR salary >= 5000;

--//========================================================//

SELECT
name 이름, salary * 12 연봉, dept_name 부서
FROM emp_test
WHERE in_date > '2007-01-01' AND salary >= 5000 OR dept_name = '관리부';

SELECT
name 이름, salary 월급, dept_name 부서, in_date 입사일
FROM emp_test
WHERE in_date > '2007-01-01' AND (salary >= 5000 OR dept_name = '관리부')

--//=========================================================//

SELECT
name 이름, salary 월급, dept_name 부서, in_date 입사일
FROM emp_test
WHERE salary BETWEEN 1000 AND 2500
ORDER BY salary;

SELECT
name 이름, salary 월급, dept_name 부서, in_date 입사일
FROM emp_test
WHERE salary BETWEEN 2500 AND 1000
ORDER BY salary;


SELECT
name 이름, salary 월급, dept_name 부서, in_date 입사일
FROM emp_test
WHERE salary NOT BETWEEN 1000 AND 2500
ORDER BY salary;

SELECT
name 이름, salary 월급, dept_name 부서, in_date 입사일
FROM emp_test
WHERE name BETWEEN '김유신222' AND '한국990'
ORDER BY name;

--아래와 비교 이해
SELECT name FROM emp_test ORDER BY name;

SELECT
name 이름, salary 월급, dept_name 부서, in_date 입사일
FROM emp_test
WHERE name BETWEEN '한국990' AND '김유신222'

SELECT name 이름, dept_name 부서
FROM emp_test
WHERE dept_name IN ('관리부', '영업부')
ORDER BY dept_name;

SELECT name 이름, dept_name 부서
FROM emp_test
WHERE dept_name = '관리부' OR dept_name = '영업부'
ORDER BY dept_name;

SELECT name 이름, dept_name 부서
FROM emp_test
WHERE dept_name NOT IN ('관리부', '영업부')
ORDER BY dept_name;

-- // ============================================== //

SELECT name 이름, dept_name 부서
FROM emp_test
WHERE name LIKE '김%';

SELECT name 이름, dept_name 부서
FROM emp_test
WHERE name LIKE '김__';

SELECT name 이름, dept_name 부서
FROM emp_test
WHERE name LIKE '_김_';

-- // ============================================== //

INSERT INTO emp_test (name, title) VAQLUES ('박_%', '특수%');
INSERT INTO emp_test (name, title) VAQLUES ('김_%', '특수%');
SELECT * FROM emp_test;
COMMIT;

SELECT *
FROM emp_test
WHERE name LIKE '__%';

SELECT *
FROM emp_test
WHERE name LIKE '_\_\%' ESCAPE '\';

SELECT *
FROM emp_test
WHERE name LIKE '_?_?%' ESCAPE '?';

-- // ============================================== //

SELECT name 이름, in_date 입사일
FROM emp_test
WHERE in_date LIKE '%01';

SELECT name 이름, in_date 입사일
FROM emp_test
WHERE in_date LIKE '04%';

SELECT name 이름, in_date 입사일
FROM emp_test
WHERE in_date LIKE '%0%';

-- // ============================================== //

SELECT name 이름, salary 월급
FROM emp_test
WHERE salary > ALL(2500, 5000);

SELECT name 이름, salary 월급
FROM emp_test
WHERE salary > ANY(2500, 5000);

SELECT name 이름, salary 월급
FROM emp_test
WHERE salary NOT IN(3333, 4444);

SELECT name 이름, salary 월급
FROM emp_test
WHERE salary <> ALL(3333, 4444);

SELECT name 이름, salary 월급
FROM emp_test
WHERE salary != ALL(3333, 4444);

-- // ============================================== //
SELECT name || '님의 월급은' || salary || '원' "사원월급"
FROM emp_test;

SELECT CONCAT(CONCAT(name, '님의 월급은'), CONCAT(salary, '원')) "사원 월급"
FROM emp_test;

SELECT CONCAT(CONCAT(name, '님의 월급은'), CONCAT(NVL(salary, 0), '원')) "사원 월급"
FROM emp_test;

-- // ============================================== //
SELECT name 이름, in_date 입사연도
FROM emp_test
WHERE in_date LIKE '01%';

SELECT name 이름, in_date 입사연도
FROM emp_test
WHERE SUBSTR(in_date, 1, 2) = '01';

SELECT name 이름, in_date 입사연도
FROM emp_test
WHERE SUBSTR(in_date, -8, 2) = '01';


SELECT title 두자직책
FROM emp_test
WHERE LENGTH(TITLE) = 2;

-- // ============================================== //
SELECT COUNT(*) FROM emp_test;

SELECT ROWNUM, id, name FROM emp_test;

SELECT COUNT(*) "레코드",
       COUNT(salary) "월급수령자",
       COUNT(NVL(salary, 0 )) "월급수령자 (NULL 포함)",
       COUNT(DISTINCT salary) "월급종류",
       COUNT(DISTINCT NVL(salary, 0)) "월급종류(NULL 포함)"
FROM emp_test;

SELECT COUNT(*) 영업부직원1,
       COUNT(dept_name) 영업부직원2,
       COUNT(salary) 영업부직원월급수령자,
FROM emp_test
WHERE dept_name = '영업부';

SELECT SUM(salary) 관리부월급합,
       MAX(salary) 관리부최대월급,
       MIN(salary) 관리부최소대월급,
       AVG(salary) 관리부평균월급,
       AVG(NVL(salary, 0)) 관리부평균월급
FROM emp_test
WHERE dept_name = '관리부';

SELECT SUM(salary) 관리부월급합,
       MAX(salary) 관리부최대월급,
       MIN(salary) 관리부최소대월급,
       AVG(salary) 관리부평균월급,
       AVG(NVL(salary, 0)) 관리부평균월급
FROM emp_test
WHERE dept_name = '영업부';

-- // ============================================== //

SELECT name, MAX(salary)
FROM emp_test
WHERE dept_name = '관리부';

SELECT dept_name, MAX(salary)
FROM emp_test
WHERE dept_name = '관리부';

SELECT dept_name, MAX(salary)
FROM emp_test
WHERE dept_name = '관리부'
GROUP BY dept_name;

SELECT dept_name, MAX(salary)
FROM emp_test
GROUP BY dept_name;

SELECT dept_name, MAX(salary)
FROM emp_test
WHERE dept_name IS NOT NULL
GROUP BY dept_name;

SELECT dept_name, AVG(salary)
FROM emp_test
WHERE dept_name IS NOT NULL
GROUP BY dept_name
ORDER BY dept_name;

