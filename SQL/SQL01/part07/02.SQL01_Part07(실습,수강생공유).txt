//==============================================//
//=================== 실   습 2 ===================//
//==============================================//

1.  이름,부서,직책,입사일 조회(ALIAS 사용)		
SELECT
name 이름, dept_name 부서, title 직책, in_date 입사일
FROM emp_test;

2.  이름,직책,연봉,특별 상여금 조회(ALIAS 사용)
     (상여금은 연봉의 15%로 계산)
     
	>>> QUERY 하나 
	NULL은 연산에서 제외(?) NULL은 어떻게 추출되는지 확인
	
SELECT
name 이름,  title 직책, salary 연봉, salary * 0.15 "특별 상여금"
FROM emp_test; 
     
     
	>>> QUERY 둘 
			직책 NULL 인 경우 ==> 인사발령전
			연봉 NULL 인경우 ==> 0
			상여금 NULL 인경우 ==> 0      
		출력되도록 Query 변경

SELECT
name 이름,  NVL(title, '인사발령전') 직책, NVL(salary, 0) 연봉, NVL2(salary, salary * 0.15, 0) "특별 상여금"
FROM emp_test; 

3. 이름,월급,일당,시급을 조회(ALIAS 사용)
     (일당 :30일, 시급 : 8시간 기준)

SELECT
name 이름,  salary/12 월급, salary/12/30 일당, salary/12/30/8 시급
FROM emp_test; 




4.위의 QUERY문을 아래의 함수를 사용하여 정리 추출(ALIAS 사용)

    ==> 반올림함수 ROUND(VALUE, 반올림자리수)
SELECT
name 이름,  ROUND(salary/12, 1) 월급, ROUND(salary/12/30, 2) 일당, ROUND(salary/12/30/8, 3) 시급
FROM emp_test;     
    
    ==> 버림    함수 TRUNC (VALUE,  버림자리수)
SELECT
name 이름,  TRUNC(salary/12, 1) 월급, TRUNC(salary/12/30, 2) 일당, TRUNC(salary/12/30/8, 3) 시급
FROM emp_test;



5. 위의 QUERY문(ROUND,TRUNC 사용한 것) 월급,일당,시급 NULL은 0 추출

    ==> 반올림함수 ROUND(VALUE, 반올림자리수)
SELECT
name 이름,  NVL2(salary, ROUND(salary/12, 1), 0) 월급, NVL2(salary, ROUND(salary/12/30, 2), 0) 일당, NVL2(salary, ROUND(salary/12/30/8, 3), 0) 시급
FROM emp_test;     
    
    ==> 버림    함수 TRUNC (VALUE,  버림자리수)
SELECT
name 이름,   NVL2(salary, TRUNC(salary/12, 1), 0) 월급, NVL2(salary, TRUNC(salary/12/30, 2), 0) 일당, NVL2(salary, TRUNC(salary/12/30/8, 3), 0) 시급
FROM emp_test;
